#summary ToDo list.
#labels Phase-Requirements

= Todo List =

  * Priority: high (M), medium (OS), low (C); (MOSCoW - Must Ought Should Could and Won't - http://en.wikipedia.org/wiki/MoSCoW_Method)
    * M - MUST have this.
    * OS - OUGHT/SHOULD have this if at all possible.
    * C - COULD have this if it does not affect anything else.
    * W - WON'T have this time but WOULD like in the future.
  * Items: (code), (docs), (design), (research), (test)
  * Progress: not done (o), finished (x), not needed (-)

  # [ModuleCollector Collector] (`*`) (allmon-client) 
    * Extraction (metrics data acquisition), 
    * Transformation (aggregating metrics to packets) and transport to Loader


  # [ModuleLoader Loader] (`*`) (allmon-server)
    * Loading data to the database
    * Transforming data to allmetrics allmon schema

  * (M) (x) (research) Research in allmon potential schema models
    * (x) (code) Design and implement allmetrics and allgeneric schemas
    * (x) (test) Load test future multidimensional analysis queries, and choose which will better work with generic metrics data


  # [ModuleMiner Miner] (`**`) 
    * Mining knowledge from collected in the database data, 
    * Statistical analysis, 
    * Correlation across set up dimensions


  # [ModuleViewer Viewer] (`**`) 
    * Presentation and Front-end 



= High =
  

  * (x/o) (design) Design generic agent API and sender which can be used for various metrics collection purposes
    * (o) (code) To increase performance of acquiring metrics process review possibility of collecting and caching metrics before sending them to agent (to the first queue).

  * (x) (code) Finish simple scheduler for active monitoring
  * (o) (code) Creating base of various listener agents for active monitoring

  * (x) (code) Finish loading mechanism in allmon-server
    * (x) (code) Load metrics data to RawMetrics table
    * (x) (code) Extracting RawMetrics data and loading them to allmetrics schema
    * (-) (design) Linking entry and exit points
  * (o) (code) Extends loading mechanism by adding storing parameters and exceptions details
  
  * (o) (design) Solve problem different times on remote clients - metrics events time synchronization issue!

  * (o) (design) Propose mechanism of building structures eligible for future multidimensional analysis
    * (x/o) (code) Creating views defined for all declared metric types (static and dynamic) 

  * (o) (research) Introduce methods of comparing and correlating two/many metrics (mainly in time dimension)
  
  * (o) (research) Research methods of aggregating data (reducing details, gaining read speed, reducing space) - data consolidation methods 


= Medium=

  * (o) (code) Create maven/ivy scripts for dependency management

  * (o) (code) Create notification mechanism in case of fatal errors, wrong configuration, lack of vital allmon components, etc. (logging, sending emails)

  * (o) (test) Test separate allmon components in either wrong configuration scenarios or other software failures
    * (o) (test) Agent work if ActiveMQ instance is down

  * (o) (design) Design agent for client side web application user behaviour/experience monitoring 
  
  * (o) (code) Creating a new metrics message sender based on log4j appender mechanism
  * (x/o) (code) Check and improve performance of metrics wrapper and aggregation strategy
  * (o) (design) Review and test having agents behind proxies.

  * (o) (code) Create a new eclipse project for purely common code (+ common test project with load test framework) - sources should be jarred and referenced to allmon-client and allmon-server sides.
    * (o) (code) Split allmon-client to allmon-server configurations and constants. Common constants should be declared in the common project.

  * (o) (code) Review and clean up allmon logging code.

= Low =

  * (o) (design) Create allmon logo

  * (o) (design) Evaluate compressing aggregated messages sent to allmon-server. This option could be suggested either for very remote agents or agents behind weak network connection. Crucial will be appropriate aggregation settings.